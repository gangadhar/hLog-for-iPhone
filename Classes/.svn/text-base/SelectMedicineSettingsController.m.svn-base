//
//  SelectMedicineSettingsController.m
//  HealthTracker
//  Created by Bhoomi on 3/12/09.
//  Copyright 2009 Elan. All rights reserved.
//


// Import All needed header files bellow.
#import "SelectMedicineSettingsController.h"
#import "SettingTableViewCell.h"
//#import "MedicineMst.h"

@implementation SelectMedicineSettingsController

/*
 // The designated initializer. Override to perform setup that is required before the view is loaded.
 - (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil {
 if (self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil]) {
 // Custom initialization
 }
 return self;
 }
 */

/*
 // Implement loadView to create a view hierarchy programmatically, without using a nib.
 - (void)loadView {
 }
 */


// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad
{
	// self.navigationItem.title=@"Medicine Settings";
	self.navigationItem.rightBarButtonItem=btnSave;
	self.navigationItem.leftBarButtonItem=btnCancle;
	selectedImage = [UIImage imageNamed:@"checked.png"];
	unselectedImage = [UIImage imageNamed:@"unchecked.png"];
	appDelegate=[[UIApplication sharedApplication]delegate];
	tblSettings.delegate=self;
	tblSettings.dataSource=self;
	UILabel *label1 = [[UILabel alloc] initWithFrame:CGRectMake(50, 0, 220, 30)];
	[label1 setFont:[UIFont boldSystemFontOfSize:15.0]];
	[label1 setBackgroundColor:[UIColor clearColor]];
	[label1 setTextAlignment:UITextAlignmentCenter];
 	[label1 setTextColor:[UIColor whiteColor]];
	[label1 setText:@"Medicine Settings"];
	self.navigationItem.titleView=label1;
	//[self.navigationController.navigationBar.topItem setTitleView:label1];
	[label1 release];
	self.navigationController.navigationBar.barStyle= UIBarStyleBlackOpaque;  
    [super viewDidLoad];
	
}
- (void)viewWillAppear:(BOOL)animated
{
	[tblSettings scrollRectToVisible:CGRectMake(0, 0, 320, 50)  animated:YES];
	//selectedArrayData=nil;
	if(!selectedArrayData)
		selectedArrayData=[[NSMutableArray alloc ]init];
	else
		[selectedArrayData removeAllObjects];
	
	[appDelegate SelectMedicineNames];  
	if([appDelegate.MedicineArray count]==0)
		btnSave.enabled=FALSE;
	else
		btnSave.enabled=TRUE;
	
	//	selectedArrayData=[data objectForKey:appDelegate.SelectedStatus]; 
	[self populateSelectedArray];
	[tblSettings reloadData];
}


-(CGFloat)findHeightForCell:(NSString *)text
{
	CGFloat		result = 40.0f;
	CGFloat		width = 0;
	//CGFloat		tableViewWidth;
	//CGRect		bounds = [UIScreen mainScreen].bounds;
	

	//	tableViewWidth = bounds.size.width;

	
	width = 225;
	// fudge factor
	if (text)
	{
		CGSize		textSize = { width, 20000.0f };		// width and height of text area
		CGSize		size = [text sizeWithFont:[UIFont boldSystemFontOfSize:15.0f] constrainedToSize:textSize lineBreakMode:UILineBreakModeCharacterWrap];
		
		size.height += 25.0f;			// top and bottom margin
		result = MAX(size.height, 40.0f);	// at least one row		
	}
	else
		
	{
		return 40;
	}
	return result;	
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
	//	NSDictionary *Dict=[appDelegate.MedicineArray objectAtIndex:indexPath.row];
	//	return [self findHeightForCell:Master.MedicineName]; 
	
	NSDictionary *Dict=[appDelegate.MedicineArray objectAtIndex:indexPath.row];
	return [self findHeightForCell:[Dict valueForKey:@"Medicine_Name"]]; 
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
    return 1;
}


// Customize the number of rows in the table view.
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
    return [appDelegate.MedicineArray count];
}


// Customize the appearance of table view cells.
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    
    static NSString *CellIdentifier = @"Cell1";
	SettingTableViewCell  *cell =(SettingTableViewCell *) [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
	if (cell == nil) 
	{
		cell = [[[SettingTableViewCell alloc] initWithFrame:CGRectZero reuseIdentifier:CellIdentifier] autorelease];
	}	
	//  cell.btnDelete.enabled=FALSE;
	NSNumber *selected = [selectedArray objectAtIndex:[indexPath row]];
	cell.btnDelete.image = ([selected boolValue]) ? selectedImage : unselectedImage;
	
	//MedicineMst *Master=[appDelegate.MedicineArray objectAtIndex:indexPath.row];
	//	cell.lblName.text=Master.MedicineName;
	cell.txtAmount.hidden=TRUE;
	NSDictionary *Dict=[appDelegate.MedicineArray objectAtIndex:indexPath.row];
	cell.lblName.text=[Dict valueForKey:@"Medicine_Name"]; 
    return cell;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath 
{
	[tableView deselectRowAtIndexPath:indexPath animated:YES];
	
	BOOL selected = [[selectedArray objectAtIndex:[indexPath row]] boolValue];
	[selectedArray replaceObjectAtIndex:[indexPath row] withObject:[NSNumber numberWithBool:!selected]];
	[tableView reloadData];
}

/*
 // Override to allow orientations other than the default portrait orientation.
 - (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
 // Return YES for supported orientations
 return (interfaceOrientation == UIInterfaceOrientationPortrait);
 }
 */

- (void)didReceiveMemoryWarning {
	
    [super didReceiveMemoryWarning]; // Releases the view if it doesn't have a superview
    // Release anything that's not essential, such as cached data
}


//An event when user clicks on Cancel button.
-(IBAction)Cancle:(id)sender
{
	[self.navigationController dismissModalViewControllerAnimated:YES];
}

//An event when user clicks on Save button.
-(IBAction)Save:(id)sender
{
	appDelegate.ReportField=@"";
	if(!arr1)
		arr1=[[NSMutableArray alloc]init];
	if([arr1 count]>0)
	{
		[arr1 removeAllObjects];
	}
	
	for(int i=0;i<[appDelegate.MedicineArray count];i++)
	{
		if([[selectedArray objectAtIndex:i]intValue]==1)
		{
			NSDictionary *Dict=[appDelegate.MedicineArray objectAtIndex:i];
			[arr1 addObject:[Dict valueForKey:@"Medicine_ID"]];
		}
		
	}
	if([arr1 count]>0)
	{
		for(int i=0;i<[arr1 count];i++)
		{
			if(i==([arr1 count]-1))
			{
				appDelegate.ReportField=[appDelegate.ReportField stringByAppendingString:[NSString stringWithFormat:@"%@",[arr1 objectAtIndex:i]]];
			}
			else
			{
				appDelegate.ReportField=[appDelegate.ReportField stringByAppendingString:[NSString stringWithFormat:@"%@,",[arr1 objectAtIndex:i]]];
			}
		}
	}
	int Update;
	
	Update=[appDelegate UpdateUserData:appDelegate.SelectedUserID DailyData:appDelegate.ReportField ColumnName:@"MedicineEntryDetail"];
	//IncrementCount=4;
	
	if(Update==1)
	{
		//UIAlertView *alert=[[UIAlertView alloc]initWithTitle:@"" message:@"Medicine settings are saved now!" delegate:self cancelButtonTitle:@"OK" otherButtonTitles:nil];
//		alert.tag=1;
//		[alert show];
//		[alert release];
		
		[self.navigationController dismissModalViewControllerAnimated:YES];
	}
	else
	{
		[self.navigationController dismissModalViewControllerAnimated:YES];
	}
	
}

- (void)alertView:(UIAlertView *)alertView clickedButtonAtIndex:(NSInteger)buttonIndex
{
	if(alertView.tag==1)
	{
		[self.navigationController dismissModalViewControllerAnimated:YES];
	}
}

- (void)populateSelectedArray
{
	if(!selectedArray)
		selectedArray=[[NSMutableArray alloc ]init];
	if([selectedArray count]>0)
	{
		[selectedArray removeAllObjects];
	}
	if([appDelegate.ReportField isEqualToString:@""])
	{
		for (int i=0; i < [appDelegate.MedicineArray count]; i++)
			[selectedArray addObject:[NSNumber numberWithBool:NO]];
	}
	else
	{
		NSArray *arr2=[appDelegate.ReportField componentsSeparatedByString:@","];
		for(int i=0;i<[appDelegate.MedicineArray count];i++)
		{
			NSDictionary *Dict=[appDelegate.MedicineArray objectAtIndex:i];
			BOOL result = [arr2 containsObject:[Dict valueForKey:@"Medicine_ID"]]; 
			if(result==TRUE)
			{
				[selectedArray addObject:[NSNumber numberWithBool:YES]];
			}
			else
			{
				[selectedArray addObject:[NSNumber numberWithBool:NO]];
			}
		}
	}
	
	
	
}
- (void)dealloc {
	
	[tblSettings release];
	[btnSave release];
	[btnCancle release];
	[selectedArray release];
	[selectedImage release];
	[unselectedImage release];
	[arr release];
	[appDelegate release];
	//NSMutableDictionary *data;
	
	[selectedArrayData release];
	
	
	[arr1 release];
	
    [super dealloc];
}


@end